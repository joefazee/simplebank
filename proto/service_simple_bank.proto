syntax = "proto3";

package pb;

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";

option go_package = "github.com/joefazee/simplebank/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Simple Bank";
        version: "1.1";
        contact: {
            name: "Abah Joseph";
            url: "https://github.com/joefazee/simplebank";
            email: "me@abahjoseph.com";
        };
    };
};
service SimpleBank {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse){
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new user";
            summary: "Create new user";
        };
    }
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse){
        option (google.api.http) = {
            patch: "/v1/update_user"
            body: "*"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update a new user; you can partially update the user";
            summary: "Update new user";
        };
    }
    rpc LoginUser(LoginUserRequest) returns (LoginUserResponse){
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Login endpoints takes a username and password and returns a payload that includes access token";
            summary: "Login endpoint";
        };
    }
}
